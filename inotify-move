#!/bin/ash
# inotify-move Script
## Gregory Pocali 5-31-2020
### Recursively watches input directory and moves the file to the same relative path within the output folder
#### Setting DEPTH environmental variable will not delete empty directories after move if less than or equal to this depth
### On launch, existing files will be moved before the inotifywait process is launched
#### Max Directories in Tree: 8192 (Default)

if [ -z "$DEPTH" ]; then
    # If depth is not set, set to 2 which is anything below the /input directory
    export ORIGDEPTH=1
    export DEPTH=2
elif [ $DEPTH -lt 2 ]; then
    # If depth is 1 or less, set to 2 which is anything below the /input directory
    export ORIGDEPTH=1
    export DEPTH=$((2))
else
    # If depth is greater than 1, set to 1 + depth to convert to a depth relative to the /input directory
    export ORIGDEPTH=$DEPTH
    export DEPTH=$((1+$DEPTH))
fi

find /input -type f -depth -mindepth $ORIGDEPTH -exec ash -c 'input='{}'; output=$(echo "${input%/*}/" | sed s/input/output/); if [ ! -e $output ]; then mkdir -p $output ; fi; mv $input $output; echo Moved $input;' \;
find /input -type d -depth -mindepth $ORIGDEPTH -exec ash -c 'input='{}'; if [ -e $input ]; then rmdir $input && echo Removed $input; fi;' \;

inotifywait -r -m -e close --format '%w#%e#%f' /input | while read line; do
    print Line: $line
    dir=$(echo $line | cut -d"#" -f1)
    op=$(echo $line | cut -d"#" -f2)
    file=$(echo $line | cut -d"#" -f3)
    if [[ "$file" != "" ]]; then
        input=$dir$file
        if [ -e $input ]; then
            if [ ! -d $input ]; then
                output=$(echo $dir | sed s/input/output/)
                echo "$input --> $output"
                if [ ! -e $output ]; then
                    mkdir -p $output
                fi
                mv $input $output
                if [ $(echo $dir | grep -o / | wc -l) -gt $(($DEPTH+1)) ]; then
                    echo -n Removing Directory: $dir...
                    rmdir $dir 2>&1 > /dev/null && echo done || echo fail
                fi
            else
                echo Excluding Directory: $input
            fi
        else
            echo Excluding Non-Existant File: $input
        fi
    else
        echo Exluding Input: $dir$file
    fi
done
